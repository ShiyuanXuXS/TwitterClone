@using TwitterClone.Models
@model List<User>
@{
    var allSelectedUsers = Model;
    var selectedUsers = Model.OrderBy(x => Guid.NewGuid()).Take(15).ToList();
}

<div class="p-2 px-3 border-end border-start">

    <div class="d-flex align-items-center p-2">
        <div class=""><a asp-page=""><svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="black"
                    class="bi bi-arrow-left-circle-fill" viewBox="0 0 16 16">
                    <path
                        d="M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0m3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5z" />
                </svg></a></div>
        <div class="names fs-5 ps-2 fw-bold">Back to Tweets</div>
        <div class="ms-auto"><a asp-page=""><svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="dark"
                    class="bi bi-arrow-clockwise" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2z" />
                    <path
                        d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466" />
                </svg></a></div>
    </div>
    <hr />
    <p class="fs-5 fw-bold">Suggested for you</p>
    <ul class="nav flex-column">
        @foreach (var user in selectedUsers)
        {
            <li class="mb-2 d-flex align-items-center p-2 ps-0">
                <div class="fs-6"> <img src="@user.Avatar" alt="avatar" width="32" height="32" class="rounded-circle"></div>
                <div class="names fs-6 ps-2">
                    <div class="fw-bold">@user.NickName</div>
                    <div>&#64;@user.UserName</div>
                    <div>@user.Description</div>
                </div>
                <div class="ms-auto">
                    <button class="btnFollowList btn btn-dark btn-sm rounded rounded-pill fw-bold"
                        data-user-id="@user.Id">Follow</button>
                </div>
            </li>
        }
    </ul>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        // Attach click event to follow buttons
        $('.btnFollowList').click(function () {
            // Get the user id from the data attribute
            var userId = $(this).data('user-id');
            var button = $(this);
            // Make an asynchronous request to the server
            fetch('api/Follow/HandleFollow', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(userId),
            })
                .then(response => response.json())
                .then(data => {
                    // Handle success
                    console.log('Success:', data);
                    // Toggle between "Follow" and "Unfollow"
                    button.text(button.text() === 'Follow' ? 'Unfollow' : 'Follow');
                    // Optionally, you can also toggle classes based on the text content
                    button.toggleClass('btn-dark btn-secondary');
                })
                .catch(function (error) {
                    // Handle error
                    console.error(error);
                });
        });
    });
</script>